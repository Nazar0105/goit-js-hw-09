{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GACTC,KAAKC,Q,CA4B7B,SAASJ,EAAcC,EAAUC,GAC/B,OAAO,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBL,KAAKC,SAAW,GACtCK,YAAW,KACLD,EACFF,EAAQ,C,SAAEL,E,MAAUC,IAENK,EAAP,C,SAAEN,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5BAQ,SAASC,cAAc,SAG/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAGqB,MAArBC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,yBAuB7C,SAAwBO,EAAOC,EAAMC,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAC3BrB,EAAcqB,EAAGH,GACdI,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBvB,QAAiBC,MAAU,IAE7DuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBvB,QAAeC,MAAU,IAG7DgB,GAASC,C,CA1B0BO,CALvBC,OAAOZ,EAAWa,OACnBD,OAAOX,EAAUY,OACfD,OAAOV,EAAYW,O","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n// Отримуємо форму\nconst form = document.querySelector('.form');\n\n// Додаємо обробник події submit для форми\nform.addEventListener('submit', function (event) {\n  event.preventDefault(); // Забороняємо стандартну поведінку форми\n\n  // Отримуємо значення полів форми\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  // Викликаємо функцію для створення промісів\n  createPromises(delay, step, amount);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Виконати проміс\n      } else {\n        reject({ position, delay }); // Відхилити проміс\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","shouldResolve","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","step","amount","i","then","console","log","catch","$47d4ff9957288465$var$createPromises","Number","value"],"version":3,"file":"03-promises.ab721c68.js.map"}